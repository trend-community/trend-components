@import "@trend/helpers/mixins/helper-prop";
@import "@trend/helpers/mixins/rtl";
@import "@trend/helpers/mixins/shadow-levels";
@import "@trend/helpers/variables";
@import "@trend/type/variables";
@import "@trend/type/mixins/type";
@import "mixins";
@import "variables";

// Main component class.

.tc-Drawer {
  @include tc-drawer-border-color($tc-drawer-divider-color);
  @include tc-drawer-surface-color($tc-drawer-surface-color);
  @include tc-drawer-width($tc-drawer-width);
  @include tc-rtl {
    border-width: 0 0 0 1px;
    border-style: none none none solid;
  }

  display: flex;
  overflow: hidden;
  position: fixed;
  z-index: $tc-drawer-z-index;
  flex-direction: column;
  flex-shrink: 0;

  box-sizing: border-box;
  border-width: 0 1px 0 0;
  border-style: none solid none none;
  height: 100%;
}

// Modifier: overlay

.tc-Drawer--overlay {
  @include tc-rtl-flip-position(left, 0);
  @include tc-helper-prop(transition-timing-function);
  @include tc-helper-prop(transition-duration);
  @include tc-rtl {
    transform: translateX(100%);

    &.is-open {
      transform: translateX(0);
    }
  }

  transform: translateX(-100%);
  transition-property: transform;
  will-change: transform;

  &.is-open {
    @include tc-shadow-level($tc-drawer-shadow-level);

    transform: translateX(0);
  }
}

// Child: header area for drawer.

.tc-Drawer-hd {
  flex-shrink: 0;

  box-sizing: border-box;
  min-height: 64px;
  padding: 0 $tc-drawer-surface-padding map-get($tc-spacings, s);
}

// Child: drawer title.

.tc-Drawer-title {
  @include tc-drawer-title-color($tc-drawer-title-color);
  @include tc-type(h5);
  @include tc-type-leading-top(35px);
  @include tc-type-leading-bottom(20px);
}

// Child: drawer subtitle.

.tc-Drawer-subtitle {
  @include tc-drawer-subtitle-color($tc-drawer-subtitle-color);
  @include tc-type(body2);
  @include tc-type-leading-top(20px);

  margin-bottom: 0;
}

// Child: drawer inner wrap.

.tc-Drawer-inner {
  overflow-y: auto;
  height: 100%;
  -webkit-overflow-scrolling: touch;
}

// Context classes
// Add a context class to a sibling node to offset it from draw accordingly.

// Context: standard drawer offset.

.tc-has-Drawer-offset {
  @include tc-rtl-flip-box(padding, left, $tc-drawer-width);
}
